# Generated by Django 5.2.1 on 2025-05-22 12:57

import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Имя')),
                ('contact_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, db_index=True, max_length=128, null=True, region=None, unique=True, verbose_name='Мобильный номер')),
                ('stack', models.CharField(blank=True, choices=[('backend', 'BACKEND'), ('frontend', 'FRONTEND'), ('full_stack', 'FULL STACK')], max_length=15, null=True, verbose_name='Cтэк')),
                ('favorite_stack', models.CharField(blank=True, choices=[('backend', 'BACKEND'), ('frontend', 'FRONTEND'), ('full_stack', 'FULL STACK')], max_length=15, null=True, verbose_name='Любимый стэк')),
            ],
            options={
                'verbose_name': 'клиент',
                'verbose_name_plural': 'клиенты',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Название')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('address', models.CharField(max_length=100, null=True, verbose_name='Место проведения')),
                ('start_event', models.DateTimeField(null=True, verbose_name='Время начала')),
                ('finish_event', models.DateTimeField(null=True, verbose_name='Время завершения')),
            ],
            options={
                'verbose_name': 'мероприятие',
                'verbose_name_plural': 'мероприятия',
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Имя')),
                ('contact_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, db_index=True, max_length=128, null=True, region=None, unique=True, verbose_name='Мобильный номер')),
                ('stack', models.CharField(blank=True, choices=[('backend', 'BACKEND'), ('frontend', 'FRONTEND'), ('full_stack', 'FULL STACK')], max_length=15, null=True, verbose_name='Cтэк')),
                ('biography', models.TextField(blank=True, null=True, verbose_name='О спикере')),
            ],
            options={
                'verbose_name': 'спикер',
                'verbose_name_plural': 'спикеры',
            },
        ),
        migrations.CreateModel(
            name='UserTg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_id', models.BigIntegerField(verbose_name='Телеграм id')),
                ('nic_tg', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ник')),
                ('is_organizator', models.BooleanField(default=False, verbose_name='Организатор')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название')),
                ('start_session', models.DateTimeField(null=True, verbose_name='Время начала')),
                ('finish_session', models.DateTimeField(null=True, verbose_name='Время завершения')),
                ('address', models.CharField(max_length=150, null=True, verbose_name='Место проведения')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='bot_logic.event', verbose_name='мероприятие')),
            ],
            options={
                'verbose_name': 'доклад',
                'verbose_name_plural': 'доклады',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(null=True, verbose_name='Вопрос')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='bot_logic.client', verbose_name='клиент')),
                ('speaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='bot_logic.speaker', verbose_name='спикер')),
            ],
            options={
                'verbose_name': 'вопрос',
                'verbose_name_plural': 'вопросы',
            },
        ),
        migrations.CreateModel(
            name='SpeakerSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=150, null=True, verbose_name='Тема выступления')),
                ('start_session', models.DateTimeField(null=True, verbose_name='Начало выступления')),
                ('finish_session', models.DateTimeField(null=True, verbose_name='Завершение')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speaker_sessions', to='bot_logic.session', verbose_name='доклад')),
                ('speaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speaker_sessions', to='bot_logic.speaker', verbose_name='спикер')),
            ],
            options={
                'verbose_name': 'выступление спикера',
                'verbose_name_plural': 'выступления спикеров',
            },
        ),
        migrations.AddField(
            model_name='speaker',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_logic.usertg', verbose_name='пользователь'),
        ),
        migrations.AddField(
            model_name='client',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_logic.usertg', verbose_name='пользователь'),
        ),
    ]
